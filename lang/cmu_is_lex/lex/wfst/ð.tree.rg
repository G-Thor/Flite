(RegularGrammar
 name
 nil
 ((s1 -> "_n.name_is_k_" s2)
  (s1 -> "_not_n.name_is_k_" s3)
  (s2 -> "_n.n.name_is_u_" s4)
  (s2 -> "_not_n.n.name_is_u_" s5)
  (s4 -> T)
  (s5 -> "_p.name_is_í_" s6)
  (s5 -> "_not_p.name_is_í_" s7)
  (s6 -> T)
  (s7 -> "_n.n.n.name_is_#_" s8)
  (s7 -> "_not_n.n.n.name_is_#_" s9)
  (s8 -> T)
  (s9 -> D)
  (s3 -> "_n.name_is_h_" s10)
  (s3 -> "_not_n.name_is_h_" s11)
  (s10 -> "_p.p.p.name_is_a_" s12)
  (s10 -> "_not_p.p.p.name_is_a_" s13)
  (s12 -> T)
  (s13 -> D)
  (s11 -> "_n.name_is_n_" s14)
  (s11 -> "_not_n.name_is_n_" s15)
  (s14 -> "_p.name_is_r_" s16)
  (s14 -> "_not_p.name_is_r_" s17)
  (s16 -> epsilon)
  (s17 -> D)
  (s15 -> "_p.name_is_f_" s18)
  (s15 -> "_not_p.name_is_f_" s19)
  (s18 -> "_n.name_is_b_" s20)
  (s18 -> "_not_n.name_is_b_" s21)
  (s20 -> epsilon)
  (s21 -> D)
  (s19 -> "_n.name_is_þ_" s22)
  (s19 -> "_not_n.name_is_þ_" s23)
  (s22 -> "_p.p.p.name_is_#_" s24)
  (s22 -> "_not_p.p.p.name_is_#_" s25)
  (s24 -> epsilon)
  (s25 -> D)
  (s23 -> D)))
